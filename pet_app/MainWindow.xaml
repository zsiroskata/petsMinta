<Window x:Class="pet_app.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pet_app"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <!-- A Style elem a ListBoxItem elemekre vonatkozik. Ez a stílus meghatározza, hogy a ListBoxItem elemek hogyan jelenjenek meg.
        Az alapértelmezett Background értékét Transparent-re állítja, ami azt jelenti, hogy az elem háttere átlátszó lesz.
        A BorderThickness értékét 1-re állítja, ami azt jelenti, hogy az elem kerete 1 pixel vastag lesz.
        A Padding értékét 10-re állítja, ami azt jelenti, hogy az elem tartalma és a kerete között 10 pixelnyi hely lesz.
        Ezen felül van egy Trigger, amely akkor aktiválódik, ha az IsSelected tulajdonság értéke True.
        Ebben az esetben a Background értékét LightGray-re állítja, ami azt jelenti, hogy ha a ListBoxItem elem ki van választva, akkor a háttere világosszürke lesz.-->
        <Style TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <!-- Az ItemTemplate a ListBox-ban (vagy más kollekcióban) lévő elemek megjelenítésének módját határozza meg. Ez azt mondja meg a ListBox-nak, hogy hogyan jelenítse meg az egyes elemeket.
        A DataTemplate-et az ItemTemplate-en belül használják, hogy meghatározzák, hogyan jelenjenek meg az adatok. 
        A DataTemplate lehetővé teszi, hogy a ListBox elemeket ne csak szövegként jelenítse meg, hanem bármilyen összetett formában, például képekkel, gombokkal stb.-->
        <ListBox x:Name="petek" HorizontalAlignment="Left" Height="300" VerticalAlignment="Top" Width="200"
                 ItemsSource="{Binding Items}">
            <!-- ez a template nem kell, ha van ToString override-unk -->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBlock x:Name="attributeTextBlock" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="220,10,0,0"/>
        <Button x:Name="btn_torol" Content="Törlés" HorizontalAlignment="Left" Margin="550,327,0,0" VerticalAlignment="Top" Padding="5,5,5,5" Height="53" Width="110" FontSize="18" Click="btn_torol_Click"/>
        <Label x:Name="lblError" HorizontalAlignment="Left" Margin="446,29,0,0" VerticalAlignment="Top" Width="318" Foreground="Red" Height="42" FontSize="14" HorizontalContentAlignment="Center" Visibility="Collapsed"/>
        <ListBox x:Name="kedvencek" Margin="510,10,100,124"     ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}">
            <!-- ez a template nem kell, ha van ToString override-unk -->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button x:Name="btn_kedvencek" Content="Kedvenc kiválasztása" HorizontalAlignment="Left" Margin="25,327,0,0" VerticalAlignment="Top" Padding="5,5,5,5" Height="53" Width="206" FontSize="18" Click="btn_kedvencek_Click"/>
        <StackPanel x:Name="imageContainer" HorizontalAlignment="Left" Height="204" Margin="245,150,0,0" VerticalAlignment="Top" Width="232"/>

    </Grid>
</Window>
